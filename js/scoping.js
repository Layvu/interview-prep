// 1. Какие числа выведутся и с какой задержкой?:

for (var i = 0; i < 10; i++) {
    setTimeout(() => {
        console.log(i);
    }, 1000);
}

// 2. Как сделать чтобы выводились числа по порядку (несколько способов)?

/*
1. Цикл - синхронная операция, после его выполнения начинаются микрозадачи, после - макрозадачи (таймаут). Так как i объявлен через var, то его область видимости функциональная, в данном случае глобальная, поэтому все колбэки setTimeout вызовы сохранили ссылку на одну и ту же переменную i, которая переопределялась с каждой итерацией (т.к. var). По итогу выведется 10 цифр 10 через 1 секунду.

2. Если заменить var на let (блочная видимость), то на каждой итерации для колбэков setTimeout будет использоваться уникальная i, вследствии чего числа выведутся по порядку

3. Можно также обернуть setTimeout в функцию, в таком случае, образуется замыкание, которое "запоминает" текущее значение i на каждой итерации

Immediately Invoked Function Expression:

При вызове IIFE(i) внутрь передаётся копия текущего значения i. Эта копия становится параметром внутренней функции и существует в своей собственной области видимости. Даже если внешняя i изменится, внутри этой функции она останется прежней

Замыкание в данном случае заключается в том, что setTimeout использует переменную из области видимости функции (копия i), а не из глобальной
*/
for (var i = 0; i < 10; i++) {
    (function (i) {
        setTimeout(() => {
            console.log(i);
        }, 1000);
    })(i);
}
